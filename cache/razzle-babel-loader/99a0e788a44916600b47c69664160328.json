{"ast":null,"code":"import express from 'express';\nimport logger from './logger';\nconst {\n  BASIC_AUTH_ENABLE = undefined,\n  BASIC_AUTH_USERNAME = '',\n  BASIC_AUTH_PASSWORD = ''\n} = process.env;\n\nconst log_middleware = (req, res, next) => {\n  const {\n    method,\n    originalUrl,\n    socket\n  } = req;\n  const {\n    statusCode\n  } = res;\n  logger.info(`${statusCode} ${method} ${originalUrl} `);\n  next();\n};\n\nconst auth_middleware = (req, res, next) => {\n  if (!BASIC_AUTH_ENABLE) {\n    return next();\n  }\n\n  const b64auth = (req.headers.authorization || '').split(' ')[1] || '';\n  const [login, password] = Buffer.from(b64auth, 'base64').toString().split(':');\n\n  if (!login || !password || login !== BASIC_AUTH_USERNAME || password !== BASIC_AUTH_PASSWORD) {\n    // Access granted...\n    return next();\n  }\n\n  res.set('WWW-Authenticate', 'Basic realm=\"401\"');\n  return res.status(401).send({\n    code: '401',\n    message: 'Authentication required.'\n  }); // -----------------------------------------------------------------------\n}; // Define Middleware Here\n\n\nexport default (server => {\n  server.use(express.json());\n  server.use('*', log_middleware);\n  if (BASIC_AUTH_ENABLE) server.use('*', auth_middleware);\n});","map":{"version":3,"sources":["/home/bon/Documents/projects/spike/material-razzle/src/server/middlewares.ts"],"names":["express","logger","BASIC_AUTH_ENABLE","undefined","BASIC_AUTH_USERNAME","BASIC_AUTH_PASSWORD","process","env","log_middleware","req","res","next","method","originalUrl","socket","statusCode","info","auth_middleware","b64auth","headers","authorization","split","login","password","Buffer","from","toString","set","status","send","code","message","server","use","json"],"mappings":"AAAA,OAAOA,OAAP,MAAkE,SAAlE;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,MAAM;AACJC,EAAAA,iBAAiB,GAAGC,SADhB;AAEJC,EAAAA,mBAAmB,GAAG,EAFlB;AAGJC,EAAAA,mBAAmB,GAAG;AAHlB,IAIFC,OAAO,CAACC,GAJZ;;AAMA,MAAMC,cAAc,GAAG,CAACC,GAAD,EAAeC,GAAf,EAA8BC,IAA9B,KAAqD;AAC1E,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA;AAAvB,MAAkCL,GAAxC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAiBL,GAAvB;AACAT,EAAAA,MAAM,CAACe,IAAP,CAAa,GAAED,UAAW,IAAGH,MAAO,IAAGC,WAAY,GAAnD;AACAF,EAAAA,IAAI;AACL,CALD;;AAOA,MAAMM,eAAe,GAAG,CAACR,GAAD,EAAeC,GAAf,EAA8BC,IAA9B,KAAqD;AAC3E,MAAI,CAACT,iBAAL,EAAwB;AACtB,WAAOS,IAAI,EAAX;AACD;;AAED,QAAMO,OAAO,GAAG,CAACT,GAAG,CAACU,OAAJ,CAAYC,aAAZ,IAA6B,EAA9B,EAAkCC,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,KAAmD,EAAnE;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqB,QAArB,EACvBQ,QADuB,GAEvBL,KAFuB,CAEjB,GAFiB,CAA1B;;AAIA,MACE,CAACC,KAAD,IACA,CAACC,QADD,IAEAD,KAAK,KAAKlB,mBAFV,IAGAmB,QAAQ,KAAKlB,mBAJf,EAKE;AACA;AACA,WAAOM,IAAI,EAAX;AACD;;AAEDD,EAAAA,GAAG,CAACiB,GAAJ,CAAQ,kBAAR,EAA4B,mBAA5B;AACA,SAAOjB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,IAAI,EAAE,KADoB;AAE1BC,IAAAA,OAAO,EAAE;AAFiB,GAArB,CAAP,CArB2E,CA0B3E;AACD,CA3BD,C,CA6BA;;;AACA,gBAAgBC,MAAD,IAAqB;AAClCA,EAAAA,MAAM,CAACC,GAAP,CAAWjC,OAAO,CAACkC,IAAR,EAAX;AAEAF,EAAAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBzB,cAAhB;AAEA,MAAIN,iBAAJ,EAAuB8B,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBhB,eAAhB;AACxB,CAND","sourcesContent":["import express, { Express, Request, Response, NextFunction } from 'express';\nimport logger from './logger';\nconst {\n  BASIC_AUTH_ENABLE = undefined,\n  BASIC_AUTH_USERNAME = '',\n  BASIC_AUTH_PASSWORD = '',\n} = process.env;\n\nconst log_middleware = (req: Request, res: Response, next: NextFunction) => {\n  const { method, originalUrl, socket } = req;\n  const { statusCode } = res;\n  logger.info(`${statusCode} ${method} ${originalUrl} `);\n  next();\n};\n\nconst auth_middleware = (req: Request, res: Response, next: NextFunction) => {\n  if (!BASIC_AUTH_ENABLE) {\n    return next();\n  }\n\n  const b64auth = (req.headers.authorization || '').split(' ')[1] || '';\n  const [login, password] = Buffer.from(b64auth, 'base64')\n    .toString()\n    .split(':');\n\n  if (\n    !login ||\n    !password ||\n    login !== BASIC_AUTH_USERNAME ||\n    password !== BASIC_AUTH_PASSWORD\n  ) {\n    // Access granted...\n    return next();\n  }\n\n  res.set('WWW-Authenticate', 'Basic realm=\"401\"');\n  return res.status(401).send({\n    code: '401',\n    message: 'Authentication required.',\n  });\n\n  // -----------------------------------------------------------------------\n};\n\n// Define Middleware Here\nexport default (server: Express) => {\n  server.use(express.json());\n\n  server.use('*', log_middleware);\n\n  if (BASIC_AUTH_ENABLE) server.use('*', auth_middleware);\n};\n"]},"metadata":{},"sourceType":"module"}